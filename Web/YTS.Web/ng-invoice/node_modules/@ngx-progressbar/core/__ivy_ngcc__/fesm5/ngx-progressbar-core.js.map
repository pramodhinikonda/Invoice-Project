{"version":3,"file":"ngx-progressbar-core.js","sources":["ng:/@ngx-progressbar/core/lib/ng-progress-ref.ts","ng:/@ngx-progressbar/core/lib/ng-progress.interface.ts","ng:/@ngx-progressbar/core/lib/ng-progress.service.ts","ng:/@ngx-progressbar/core/lib/ng-progress.component.ts","ng:/@ngx-progressbar/core/lib/ng-progress.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { Observable, Subject, BehaviorSubject, timer, of, combineLatest, Subscription } from 'rxjs';\r\nimport { tap, map, skip, delay, filter, debounce, switchMap, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nexport class NgProgressRef {\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  private readonly _state: BehaviorSubject<NgProgressState>;\r\n  state: Observable<NgProgressState>;\r\n\r\n  /** Stream that emits when config is changed */\r\n  private readonly _config: BehaviorSubject<NgProgressConfig>;\r\n  config: Observable<NgProgressState>;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private readonly _trickling = new Subject();\r\n\r\n  /** Stream that combines \"_trickling\" and \"config\" streams */\r\n  private readonly _worker = Subscription.EMPTY;\r\n\r\n  /** Get current progress state */\r\n  private get currState(): NgProgressState {\r\n    return this._state.value;\r\n  }\r\n\r\n  /** Check if progress has started */\r\n  get isStarted(): boolean {\r\n    return this.currState.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(customConfig: NgProgressConfig, private _onDestroyCallback: Function) {\r\n    this._state = new BehaviorSubject<NgProgressState>({active: false, value: 0});\r\n    this._config = new BehaviorSubject<NgProgressConfig>(customConfig);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._state.asObservable();\r\n\r\n    this._worker = combineLatest(this._trickling, this._config).pipe(\r\n      debounce(([start, config]: [boolean, NgProgressConfig]) => timer(start ? config.debounceTime : 0)),\r\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this.onTrickling(config) : this.onComplete(config))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Start the progress\r\n   */\r\n  start() {\r\n    this._trickling.next(true);\r\n  }\r\n\r\n  /**\r\n   * Complete the progress\r\n   */\r\n  complete() {\r\n    this._trickling.next(false);\r\n  }\r\n\r\n  /**\r\n   * Increment the progress\r\n   * @param amount\r\n   */\r\n  inc(amount?: number) {\r\n    const n = this.currState.value;\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        amount = this._config.value.trickleFunc(n);\r\n      }\r\n      this.set(n + amount);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the progress\r\n   * @param n\r\n   */\r\n  set(n: number) {\r\n    this.setState({value: this.clamp(n), active: true});\r\n  }\r\n\r\n  /**\r\n   * Set config\r\n   * @param config\r\n   */\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /**\r\n   * Destroy progress reference\r\n   */\r\n  destroy() {\r\n    this._worker.unsubscribe();\r\n    this._trickling.complete();\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this._onDestroyCallback();\r\n  }\r\n\r\n  /**\r\n   * Set progress state\r\n   * @param state\r\n   */\r\n  private setState(state: NgProgressState) {\r\n    this._state.next({...this.currState, ...state});\r\n  }\r\n\r\n  /**\r\n   * Clamps a value to be between min and max\r\n   * @param n\r\n   */\r\n  private clamp(n: number): number {\r\n    return Math.max(this._config.value.min, Math.min(this._config.value.max, n));\r\n  }\r\n\r\n  /**\r\n   * Keeps incrementing the progress\r\n   * @param config\r\n   */\r\n  private onTrickling(config: NgProgressConfig): Observable<number> {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.value.min);\r\n    }\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /**\r\n   * Completes then resets the progress\r\n   * @param config\r\n   */\r\n  private onComplete(config: NgProgressConfig): Observable<any> {\r\n    return !this.isStarted ? of({}) : of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this.setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this.setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this.setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgProgressState {\r\n  active?: boolean;\r\n  value?: number;\r\n}\r\n\r\nexport interface NgProgressConfig {\r\n  spinnerPosition?: 'left' | 'right';\r\n  direction?: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\r\n  ease?: string;\r\n  color?: string;\r\n  thick?: boolean;\r\n  fixed?: boolean;\r\n  meteor?: boolean;\r\n  spinner?: boolean;\r\n  max?: number;\r\n  min?: number;\r\n  speed?: number;\r\n  trickleSpeed?: number;\r\n  trickleFunc?: (n: number) => number;\r\n  debounceTime?: number;\r\n}\r\n\r\nexport const NG_PROGRESS_CONFIG = new InjectionToken<NgProgressConfig>('ngProgressConfig');\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  min: 8,\r\n  max: 100,\r\n  speed: 200,\r\n  debounceTime: 0,\r\n  trickleSpeed: 300,\r\n  fixed: true,\r\n  meteor: true,\r\n  thick: false,\r\n  spinner: true,\r\n  ease: 'linear',\r\n  color: '#1B95E0',\r\n  direction: 'ltr+',\r\n  spinnerPosition: 'right',\r\n  trickleFunc: (n: number): number => {\r\n    if (n >= 0 && n < 20) return 10;\r\n    if (n >= 20 && n < 50) return 4;\r\n    if (n >= 50 && n < 80) return 2;\r\n    if (n >= 80 && n < 99) return 0.5;\r\n    return 0;\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgProgress {\r\n\r\n  /** Store progress bar instances */\r\n  private readonly _instances = new Map<string, NgProgressRef>();\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(NG_PROGRESS_CONFIG) config: NgProgressConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or Create progress bar by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances.has(id)) {\r\n      // Get ProgressRef instance\r\n      const progressRef = this._instances.get(id);\r\n      if (config) {\r\n        progressRef.setConfig({...this.config, ...config});\r\n      }\r\n      return progressRef;\r\n    } else {\r\n      // Create new ProgressRef instance\r\n      const progressRef = new NgProgressRef({...this.config, ...config}, this.deleteInstance(id));\r\n      return this._instances.set(id, progressRef).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all progress bar instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: NgProgressRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each progress bar instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      this._instances.delete(id);\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, SubscriptionLike} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick',\r\n    '[attr.fixed]': 'fixed'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./ng-progress.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started: SubscriptionLike = Subscription.EMPTY;\r\n  private _completed: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Stream that emits progress state */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() fixed: boolean = this._ngProgress.config.fixed;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\r\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when inputs change\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n        trickleFunc: this.trickleFunc,\r\n        debounceTime: this.debounceTime\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n      debounceTime: this.debounceTime\r\n    });\r\n\r\n    // Subscribe to progress state\r\n    this.state$ = this.progressRef.state.pipe(\r\n      map((state: NgProgressState) => ({\r\n        active: state.active,\r\n        transform: `translate3d(${state.value}%,0,0)`\r\n      }))\r\n    );\r\n\r\n    // Subscribes to started and completed events on deman\r\n    if (this.started.observers.length) {\r\n      this._started = this.progressRef.started.subscribe(() => this.started.emit());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._started.unsubscribe();\r\n    this._completed.unsubscribe();\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      this.progressRef.destroy();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static withConfig(config: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: NG_PROGRESS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}