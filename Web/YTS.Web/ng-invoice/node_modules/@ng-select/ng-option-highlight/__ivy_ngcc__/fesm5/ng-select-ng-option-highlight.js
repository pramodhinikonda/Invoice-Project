import { Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
var NgOptionHighlightDirective = /** @class */ (function () {
    function NgOptionHighlightDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.element = this.elementRef.nativeElement;
    }
    /**
     * @return {?}
     */
    NgOptionHighlightDirective.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (this._canHighlight) {
            this._highlightLabel();
        }
    };
    /**
     * @return {?}
     */
    NgOptionHighlightDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.label = this.element.innerHTML;
        if (this._canHighlight) {
            this._highlightLabel();
        }
    };
    /**
     * @private
     * @param {?} str
     * @return {?}
     */
    NgOptionHighlightDirective.prototype._escapeRegExp = /**
     * @private
     * @param {?} str
     * @return {?}
     */
    function (str) {
        return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    };
    /**
     * @private
     * @return {?}
     */
    NgOptionHighlightDirective.prototype._highlightLabel = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var label = this.label;
        if (!this.term) {
            this._setInnerHtml(label);
            return;
        }
        /** @type {?} */
        var alternationString = this._escapeRegExp(this.term).replace(' ', '|');
        /** @type {?} */
        var termRegex = new RegExp(alternationString, 'gi');
        this._setInnerHtml(label.replace(termRegex, "<span class=\"highlighted\">$&</span>"));
    };
    Object.defineProperty(NgOptionHighlightDirective.prototype, "_canHighlight", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return this._isDefined(this.term) && this._isDefined(this.label);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} html
     * @return {?}
     */
    NgOptionHighlightDirective.prototype._setInnerHtml = /**
     * @private
     * @param {?} html
     * @return {?}
     */
    function (html) {
        this.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', html);
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    NgOptionHighlightDirective.prototype._isDefined = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value !== undefined && value !== null;
    };
    /** @nocollapse */
    NgOptionHighlightDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    NgOptionHighlightDirective.propDecorators = {
        term: [{ type: Input, args: ['ngOptionHighlight',] }]
    };
NgOptionHighlightDirective.ɵfac = function NgOptionHighlightDirective_Factory(t) { return new (t || NgOptionHighlightDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
NgOptionHighlightDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgOptionHighlightDirective, selectors: [["", "ngOptionHighlight", ""]], inputs: { term: ["ngOptionHighlight", "term"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionHighlightDirective, [{
        type: Directive,
        args: [{
                selector: '[ngOptionHighlight]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { term: [{
            type: Input,
            args: ['ngOptionHighlight']
        }] }); })();
    return NgOptionHighlightDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgOptionHighlightModule = /** @class */ (function () {
    function NgOptionHighlightModule() {
    }
NgOptionHighlightModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOptionHighlightModule });
NgOptionHighlightModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOptionHighlightModule_Factory(t) { return new (t || NgOptionHighlightModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOptionHighlightModule, { declarations: [NgOptionHighlightDirective], exports: [NgOptionHighlightDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionHighlightModule, [{
        type: NgModule,
        args: [{
                declarations: [NgOptionHighlightDirective],
                exports: [NgOptionHighlightDirective]
            }]
    }], function () { return []; }, null); })();
    return NgOptionHighlightModule;
}());

export { NgOptionHighlightDirective, NgOptionHighlightModule };

//# sourceMappingURL=ng-select-ng-option-highlight.js.map