/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { swalDefaultsProvider } from './di';
import { SwalPartialTargets } from './swal-partial-targets';
import { SwalPartialComponent } from './swal-partial.component';
import { SwalPartialDirective } from './swal-partial.directive';
import { SwalComponent } from './swal.component';
import { SwalDirective } from './swal.directive';
var SweetAlert2Module = /** @class */ (function () {
    function SweetAlert2Module() {
    }
    /**
     * @param {?=} defaultSwalOptions
     * @return {?}
     */
    SweetAlert2Module.forRoot = /**
     * @param {?=} defaultSwalOptions
     * @return {?}
     */
    function (defaultSwalOptions) {
        return {
            ngModule: SweetAlert2Module,
            providers: [swalDefaultsProvider(defaultSwalOptions)]
        };
    };
    SweetAlert2Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        SwalComponent, SwalPartialDirective, SwalPartialComponent,
                        SwalDirective
                    ],
                    providers: [
                        SwalPartialTargets
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        SwalComponent, SwalPartialDirective,
                        SwalDirective
                    ],
                    entryComponents: [
                        SwalComponent, SwalPartialComponent
                    ]
                },] }
    ];
    return SweetAlert2Module;
}());
export { SweetAlert2Module };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dlZXRhbGVydDIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3ZWV0YWxlcnQyL25neC1zd2VldGFsZXJ0Mi8iLCJzb3VyY2VzIjpbInN3ZWV0YWxlcnQyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM1QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWpEO0lBQUE7SUEwQkEsQ0FBQzs7Ozs7SUFOaUIseUJBQU87Ozs7SUFBckIsVUFBc0Isa0JBQXNDO1FBQ3hELE9BQU87WUFDSCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLFNBQVMsRUFBRSxDQUFDLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDeEQsQ0FBQztJQUNOLENBQUM7O2dCQXpCSixRQUFRLFNBQUM7b0JBQ04sWUFBWSxFQUFFO3dCQUNWLGFBQWEsRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0I7d0JBQ3pELGFBQWE7cUJBQ2hCO29CQUNELFNBQVMsRUFBRTt3QkFDUCxrQkFBa0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRTt3QkFDTCxZQUFZO3FCQUNmO29CQUNELE9BQU8sRUFBRTt3QkFDTCxhQUFhLEVBQUUsb0JBQW9CO3dCQUNuQyxhQUFhO3FCQUNoQjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2IsYUFBYSxFQUFFLG9CQUFvQjtxQkFDdEM7aUJBQ0o7O0lBUUQsd0JBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQVBZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3dlZXRBbGVydE9wdGlvbnMgfSBmcm9tICdzd2VldGFsZXJ0Mic7XG5pbXBvcnQgeyBzd2FsRGVmYXVsdHNQcm92aWRlciB9IGZyb20gJy4vZGknO1xuaW1wb3J0IHsgU3dhbFBhcnRpYWxUYXJnZXRzIH0gZnJvbSAnLi9zd2FsLXBhcnRpYWwtdGFyZ2V0cyc7XG5pbXBvcnQgeyBTd2FsUGFydGlhbENvbXBvbmVudCB9IGZyb20gJy4vc3dhbC1wYXJ0aWFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTd2FsUGFydGlhbERpcmVjdGl2ZSB9IGZyb20gJy4vc3dhbC1wYXJ0aWFsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTd2FsQ29tcG9uZW50IH0gZnJvbSAnLi9zd2FsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTd2FsRGlyZWN0aXZlIH0gZnJvbSAnLi9zd2FsLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFN3YWxDb21wb25lbnQsIFN3YWxQYXJ0aWFsRGlyZWN0aXZlLCBTd2FsUGFydGlhbENvbXBvbmVudCxcbiAgICAgICAgU3dhbERpcmVjdGl2ZVxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIFN3YWxQYXJ0aWFsVGFyZ2V0c1xuICAgIF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgU3dhbENvbXBvbmVudCwgU3dhbFBhcnRpYWxEaXJlY3RpdmUsXG4gICAgICAgIFN3YWxEaXJlY3RpdmVcbiAgICBdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW1xuICAgICAgICBTd2FsQ29tcG9uZW50LCBTd2FsUGFydGlhbENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgU3dlZXRBbGVydDJNb2R1bGUge1xuICAgIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChkZWZhdWx0U3dhbE9wdGlvbnM/OiBTd2VldEFsZXJ0T3B0aW9ucyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFN3ZWV0QWxlcnQyTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbc3dhbERlZmF1bHRzUHJvdmlkZXIoZGVmYXVsdFN3YWxPcHRpb25zKV1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=